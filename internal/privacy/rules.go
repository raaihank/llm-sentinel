package privacy

import "regexp"

// GetDefaultRules returns all default PII detection rules ported from TypeScript
func GetDefaultRules() []DetectionRule {
	return []DetectionRule{
		{
			Name:        "userPath",
			Pattern:     regexp.MustCompile(`(?i)((?:/Users/|/home/|C:\\Users\\))([^/\\\s"']+)((?:[/\\][^\s"']*)?)`),
			Replacement: "$1[USERNAME]$3",
			Enabled:     true,
		},
		{
			Name:        "apiKey",
			Pattern:     regexp.MustCompile(`(?i)(?:api[_-]?key|apikey)["']?\s*[:=]\s*["']?[a-zA-Z0-9\-_.~+/]+=*["']?`),
			Replacement: "[API_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "secret",
			Pattern:     regexp.MustCompile(`(?i)(?:secret|token|password|passwd|pwd)["']?\s*[:=]\s*["']?[a-zA-Z0-9\-_.~+/!@#$%^&*]+=*["']?`),
			Replacement: "[SECRET_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "openaiApiKey",
			Pattern:     regexp.MustCompile(`sk-[a-zA-Z0-9]{20,}`),
			Replacement: "[OPENAI_API_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "openaiOrgId",
			Pattern:     regexp.MustCompile(`org-[a-zA-Z0-9]{20,}`),
			Replacement: "[OPENAI_ORG_ID_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "openaiProjectId",
			Pattern:     regexp.MustCompile(`sk-proj-[a-zA-Z0-9]{20,}`),
			Replacement: "[OPENAI_PROJECT_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "anthropicApiKey",
			Pattern:     regexp.MustCompile(`sk-ant-[a-zA-Z0-9]{20,}`),
			Replacement: "[ANTHROPIC_API_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "claudeApiKey",
			Pattern:     regexp.MustCompile(`sk-ant-[a-zA-Z0-9]{20,}`),
			Replacement: "[CLAUDE_API_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "googleCloudApiKey",
			Pattern:     regexp.MustCompile(`AIza[0-9A-Za-z\-_]{35}`),
			Replacement: "[GOOGLE_CLOUD_API_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "googleCloudServiceAccount",
			Pattern:     regexp.MustCompile(`[a-zA-Z0-9\-_]+@[a-zA-Z0-9\-_]+\.iam\.gserviceaccount\.com`),
			Replacement: "[GOOGLE_CLOUD_SERVICE_ACCOUNT_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "googleCloudProjectId",
			Pattern:     regexp.MustCompile(`"project_id":\s*"([a-zA-Z0-9\-_]{6,30})"`),
			Replacement: `"project_id": "[GOOGLE_CLOUD_PROJECT_ID_MASKED]"`,
			Enabled:     true,
		},
		{
			Name:        "googleCloudCredentials",
			Pattern:     regexp.MustCompile(`"type":\s*"service_account".*?"private_key":\s*"-----BEGIN PRIVATE KEY-----[^"]*-----END PRIVATE KEY-----"`),
			Replacement: "[GOOGLE_CLOUD_CREDENTIALS_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "azureOpenaiApiKey",
			Pattern:     regexp.MustCompile(`(?i)(?:api[_-]?key|apikey)["']?\s*[:=]\s*["']?[a-zA-Z0-9]{32}["']?`),
			Replacement: "[AZURE_OPENAI_API_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "cohereApiKey",
			Pattern:     regexp.MustCompile(`(?i)(?:cohere[_-]?api[_-]?key|cohere[_-]?key)["']?\s*[:=]\s*["']?[a-zA-Z0-9]{40}["']?`),
			Replacement: "[COHERE_API_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "huggingfaceToken",
			Pattern:     regexp.MustCompile(`(?i)(?:hf[_-]?token|huggingface[_-]?token)["']?\s*[:=]\s*["']?hf_[a-zA-Z0-9]{39}["']?`),
			Replacement: "[HUGGINGFACE_TOKEN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "pineconeApiKey",
			Pattern:     regexp.MustCompile(`(?i)(?:pinecone[_-]?api[_-]?key|pinecone[_-]?key)["']?\s*[:=]\s*["']?[a-zA-Z0-9]{32}["']?`),
			Replacement: "[PINECONE_API_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "weaviateApiKey",
			Pattern:     regexp.MustCompile(`(?i)(?:weaviate[_-]?api[_-]?key|weaviate[_-]?key)["']?\s*[:=]\s*["']?[a-zA-Z0-9]{32}["']?`),
			Replacement: "[WEAVIATE_API_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "chromaApiKey",
			Pattern:     regexp.MustCompile(`(?i)(?:chroma[_-]?api[_-]?key|chroma[_-]?key)["']?\s*[:=]\s*["']?[a-zA-Z0-9]{32}["']?`),
			Replacement: "[CHROMA_API_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "email",
			Pattern:     regexp.MustCompile(`[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}`),
			Replacement: "[EMAIL_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "ipAddress",
			Pattern:     regexp.MustCompile(`\b(?:\d{1,3}\.){3}\d{1,3}\b`),
			Replacement: "[IP_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "creditCard",
			Pattern:     regexp.MustCompile(`\b(?:\d{4}[\s-]?){3}\d{4}\b`),
			Replacement: "[CREDIT_CARD_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "ssn",
			Pattern:     regexp.MustCompile(`\b\d{3}-\d{2}-\d{4}\b`),
			Replacement: "[SSN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "phoneNumber",
			Pattern:     regexp.MustCompile(`(\+?1?\s?)?\(?\d{3}\)?[\s.-]?\d{3}[\s.-]?\d{4}`),
			Replacement: "[PHONE_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "awsAccessKey",
			Pattern:     regexp.MustCompile(`AKIA[0-9A-Z]{16}`),
			Replacement: "[AWS_ACCESS_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "awsSecretKey",
			Pattern:     regexp.MustCompile(`[a-zA-Z0-9/+=]{40}`),
			Replacement: "[AWS_SECRET_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "githubToken",
			Pattern:     regexp.MustCompile(`ghp_[a-zA-Z0-9]{36}`),
			Replacement: "[GITHUB_TOKEN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "jwtToken",
			Pattern:     regexp.MustCompile(`eyJ[a-zA-Z0-9_-]+\.eyJ[a-zA-Z0-9_-]+\.[a-zA-Z0-9_-]+`),
			Replacement: "[JWT_TOKEN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "databaseUrl",
			Pattern:     regexp.MustCompile(`(?:postgresql|mysql|mongodb|redis)://[^:\s]+:[^@\s]+@[^:\s]+:\d+/[^\s]+`),
			Replacement: "[DATABASE_URL_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "redisUrl",
			Pattern:     regexp.MustCompile(`redis://[^:\s]+:[^@\s]+@[^:\s]+:\d+`),
			Replacement: "[REDIS_URL_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "webhookUrl",
			Pattern:     regexp.MustCompile(`(?i)(?:webhook[_-]?url|callback[_-]?url)["']?\s*[:=]\s*["']?https?://[^\s"']+["']?`),
			Replacement: "[WEBHOOK_URL_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "stripeKey",
			Pattern:     regexp.MustCompile(`(?:sk_live_|pk_live_|sk_test_|pk_test_)[a-zA-Z0-9]{24}`),
			Replacement: "[STRIPE_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "sendgridKey",
			Pattern:     regexp.MustCompile(`SG\.[a-zA-Z0-9\-_]{22}\.[a-zA-Z0-9\-_]{43}`),
			Replacement: "[SENDGRID_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "twilioAccountSid",
			Pattern:     regexp.MustCompile(`AC[a-zA-Z0-9]{32}`),
			Replacement: "[TWILIO_ACCOUNT_SID_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "twilioAuthToken",
			Pattern:     regexp.MustCompile(`(?i)(?:twilio[_-]?auth[_-]?token|twilio[_-]?token)["']?\s*[:=]\s*["']?[a-zA-Z0-9]{32}["']?`),
			Replacement: "[TWILIO_AUTH_TOKEN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "slackToken",
			Pattern:     regexp.MustCompile(`xox[bpars]-[0-9]{12}-[0-9]{12}-[a-zA-Z0-9]{24}`),
			Replacement: "[SLACK_TOKEN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "slackWebhook",
			Pattern:     regexp.MustCompile(`https://hooks\.slack\.com/services/[A-Z0-9]{9}/[A-Z0-9]{9}/[a-zA-Z0-9]{24}`),
			Replacement: "[SLACK_WEBHOOK_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "discordToken",
			Pattern:     regexp.MustCompile(`[MN][A-Za-z\d]{23}\.[\w-]{6}\.[\w-]{27}`),
			Replacement: "[DISCORD_TOKEN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "discordWebhook",
			Pattern:     regexp.MustCompile(`https://discord(?:app)?\.com/api/webhooks/\d+/[A-Za-z0-9\-_]+`),
			Replacement: "[DISCORD_WEBHOOK_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "facebookAccessToken",
			Pattern:     regexp.MustCompile(`EAA[a-zA-Z0-9]{100,}`),
			Replacement: "[FACEBOOK_ACCESS_TOKEN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "googleOAuthToken",
			Pattern:     regexp.MustCompile(`ya29\.[a-zA-Z0-9_-]{68,}`),
			Replacement: "[GOOGLE_OAUTH_TOKEN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "microsoftClientSecret",
			Pattern:     regexp.MustCompile(`(?i)(?:client[_-]?secret|microsoft[_-]?secret)["']?\s*[:=]\s*["']?[a-zA-Z0-9\-_.~]{34}["']?`),
			Replacement: "[MICROSOFT_CLIENT_SECRET_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "azureSubscriptionId",
			Pattern:     regexp.MustCompile(`[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}`),
			Replacement: "[AZURE_SUBSCRIPTION_ID_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "dockerhubToken",
			Pattern:     regexp.MustCompile(`dckr_pat_[a-zA-Z0-9_-]{36}`),
			Replacement: "[DOCKERHUB_TOKEN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "npmToken",
			Pattern:     regexp.MustCompile(`npm_[a-zA-Z0-9]{36}`),
			Replacement: "[NPM_TOKEN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "pypiToken",
			Pattern:     regexp.MustCompile(`pypi-[a-zA-Z0-9_-]{59}`),
			Replacement: "[PYPI_TOKEN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "herokuApiKey",
			Pattern:     regexp.MustCompile(`[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}`),
			Replacement: "[HEROKU_API_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "netlifyToken",
			Pattern:     regexp.MustCompile(`nfp_[a-zA-Z0-9]{40}`),
			Replacement: "[NETLIFY_TOKEN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "vercelToken",
			Pattern:     regexp.MustCompile(`(?i)(?:vercel[_-]?token|vercel[_-]?api[_-]?key)["']?\s*[:=]\s*["']?[a-zA-Z0-9]{24}["']?`),
			Replacement: "[VERCEL_TOKEN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "mongodbConnectionString",
			Pattern:     regexp.MustCompile(`mongodb(?:\+srv)?://[^:\s]+:[^@\s]+@[^/\s]+/[^\s]+`),
			Replacement: "[MONGODB_CONNECTION_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "elasticsearchUrl",
			Pattern:     regexp.MustCompile(`https?://[^:\s]+:[^@\s]+@[^:\s]+:\d+`),
			Replacement: "[ELASTICSEARCH_URL_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "rabbitMqUrl",
			Pattern:     regexp.MustCompile(`amqps?://[^:\s]+:[^@\s]+@[^:\s]+:\d+/[^\s]*`),
			Replacement: "[RABBITMQ_URL_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "kafkaUrl",
			Pattern:     regexp.MustCompile(`kafka://[^:\s]+:[^@\s]+@[^:\s]+:\d+`),
			Replacement: "[KAFKA_URL_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "ftpCredentials",
			Pattern:     regexp.MustCompile(`ftp://[^:\s]+:[^@\s]+@[^:\s]+`),
			Replacement: "[FTP_CREDENTIALS_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "sshPrivateKey",
			Pattern:     regexp.MustCompile(`-----BEGIN (?:RSA |DSA |EC |OPENSSH )?PRIVATE KEY-----[\s\S]*?-----END (?:RSA |DSA |EC |OPENSSH )?PRIVATE KEY-----`),
			Replacement: "[SSH_PRIVATE_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "pgpPrivateKey",
			Pattern:     regexp.MustCompile(`-----BEGIN PGP PRIVATE KEY BLOCK-----[\s\S]*?-----END PGP PRIVATE KEY BLOCK-----`),
			Replacement: "[PGP_PRIVATE_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "x509Certificate",
			Pattern:     regexp.MustCompile(`-----BEGIN CERTIFICATE-----[\s\S]*?-----END CERTIFICATE-----`),
			Replacement: "[X509_CERTIFICATE_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "awsSessionToken",
			Pattern:     regexp.MustCompile(`(?i)(?:aws[_-]?session[_-]?token|session[_-]?token)["']?\s*[:=]\s*["']?[A-Za-z0-9/+=]{100,}["']?`),
			Replacement: "[AWS_SESSION_TOKEN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "awsAccountId",
			Pattern:     regexp.MustCompile(`(?i)(?:aws[_-]?account[_-]?id|account[_-]?id)["']?\s*[:=]\s*["']?\d{12}["']?`),
			Replacement: "[AWS_ACCOUNT_ID_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "gcpProjectNumber",
			Pattern:     regexp.MustCompile(`"project_number":\s*"(\d{12})"`),
			Replacement: `"project_number": "[GCP_PROJECT_NUMBER_MASKED]"`,
			Enabled:     true,
		},
		{
			Name:        "dockerRegistryAuth",
			Pattern:     regexp.MustCompile(`"auth":\s*"[A-Za-z0-9+/]+=*"`),
			Replacement: `"auth": "[DOCKER_REGISTRY_AUTH_MASKED]"`,
			Enabled:     true,
		},
		{
			Name:        "kubernetesToken",
			Pattern:     regexp.MustCompile(`eyJ[a-zA-Z0-9_-]+\.[a-zA-Z0-9_-]+\.[a-zA-Z0-9_-]+`),
			Replacement: "[KUBERNETES_TOKEN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "vaultToken",
			Pattern:     regexp.MustCompile(`hvs\.[a-zA-Z0-9]{24}`),
			Replacement: "[VAULT_TOKEN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "consulToken",
			Pattern:     regexp.MustCompile(`[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}`),
			Replacement: "[CONSUL_TOKEN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "nomadToken",
			Pattern:     regexp.MustCompile(`[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}`),
			Replacement: "[NOMAD_TOKEN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "datadogApiKey",
			Pattern:     regexp.MustCompile(`[a-f0-9]{32}`),
			Replacement: "[DATADOG_API_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "newRelicApiKey",
			Pattern:     regexp.MustCompile(`NRAK-[A-Z0-9]{27}`),
			Replacement: "[NEW_RELIC_API_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "sentryDsn",
			Pattern:     regexp.MustCompile(`https://[a-f0-9]{32}@[a-f0-9]+\.ingest\.sentry\.io/\d+`),
			Replacement: "[SENTRY_DSN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "bugsnagApiKey",
			Pattern:     regexp.MustCompile(`[a-f0-9]{32}`),
			Replacement: "[BUGSNAG_API_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "rollbarAccessToken",
			Pattern:     regexp.MustCompile(`[a-f0-9]{32}`),
			Replacement: "[ROLLBAR_ACCESS_TOKEN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "logglyToken",
			Pattern:     regexp.MustCompile(`[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}`),
			Replacement: "[LOGGLY_TOKEN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "splunkToken",
			Pattern:     regexp.MustCompile(`[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}`),
			Replacement: "[SPLUNK_TOKEN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "elasticCloudId",
			Pattern:     regexp.MustCompile(`(?i)(?:elastic[_-]?cloud[_-]?id|cloud[_-]?id)["']?\s*[:=]\s*["']?[a-zA-Z0-9_-]+:[a-zA-Z0-9+/]+=*["']?`),
			Replacement: "[ELASTIC_CLOUD_ID_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "algoliaApiKey",
			Pattern:     regexp.MustCompile(`[a-f0-9]{32}`),
			Replacement: "[ALGOLIA_API_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "mailgunApiKey",
			Pattern:     regexp.MustCompile(`key-[a-f0-9]{32}`),
			Replacement: "[MAILGUN_API_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "mailchimpApiKey",
			Pattern:     regexp.MustCompile(`[a-f0-9]{32}-us\d+`),
			Replacement: "[MAILCHIMP_API_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "pusherKey",
			Pattern:     regexp.MustCompile(`[a-f0-9]{20}`),
			Replacement: "[PUSHER_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "pusherSecret",
			Pattern:     regexp.MustCompile(`[a-f0-9]{20}`),
			Replacement: "[PUSHER_SECRET_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "firebaseApiKey",
			Pattern:     regexp.MustCompile(`AIza[0-9A-Za-z\-_]{35}`),
			Replacement: "[FIREBASE_API_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "cloudflareApiKey",
			Pattern:     regexp.MustCompile(`[a-f0-9]{37}`),
			Replacement: "[CLOUDFLARE_API_KEY_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "cloudflareToken",
			Pattern:     regexp.MustCompile(`[a-zA-Z0-9_-]{40}`),
			Replacement: "[CLOUDFLARE_TOKEN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "fastlyToken",
			Pattern:     regexp.MustCompile(`[a-f0-9]{32}`),
			Replacement: "[FASTLY_TOKEN_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "maxCdnSecret",
			Pattern:     regexp.MustCompile(`[a-f0-9]{32}`),
			Replacement: "[MAXCDN_SECRET_MASKED]",
			Enabled:     true,
		},
		{
			Name:        "bitlyAccessToken",
			Pattern:     regexp.MustCompile(`[a-f0-9]{40}`),
			Replacement: "[BITLY_ACCESS_TOKEN_MASKED]",
			Enabled:     true,
		},
	}
}
