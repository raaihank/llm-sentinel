services:
  # PostgreSQL with pgvector extension
  postgres:
    image: pgvector/pgvector:pg16
    container_name: llm-sentinel-postgres
    environment:
      POSTGRES_DB: llm_sentinel
      POSTGRES_USER: sentinel
      POSTGRES_PASSWORD: sentinel_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - llm-sentinel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sentinel -d llm_sentinel"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for vector caching
  redis:
    image: redis:7-alpine
    container_name: llm-sentinel-redis
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - llm-sentinel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # LLM-Sentinel main application
  llm-sentinel:
    build: .
    container_name: llm-sentinel
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      # Persistent logs
      - ./logs:/logs
      # Persistent model cache
      - model_cache:/app/models
      # Docker-specific configuration
      - ./configs/docker.yaml:/configs/docker.yaml:ro
    environment:
      - TZ=UTC
      # Database connection
      - SENTINEL_DATABASE_URL=postgres://sentinel:sentinel_pass@postgres:5432/llm_sentinel?sslmode=disable
      - SENTINEL_REDIS_URL=redis://redis:6379
      # Vector security settings
      - SENTINEL_SECURITY_VECTOR_SECURITY_ENABLED=true
      - SENTINEL_SECURITY_VECTOR_SECURITY_MODEL_CACHE_DIR=/app/models/cache
      - SENTINEL_SECURITY_VECTOR_SECURITY_MODEL_AUTO_DOWNLOAD=true
    restart: unless-stopped
    # Add extra hosts for Docker Desktop compatibility
    extra_hosts:
      - "host.docker.internal:host-gateway"
    # Override default config to use Docker-specific config
    command: ["--config", "/configs/docker.yaml"]
    healthcheck:
      test: ["CMD", "/sentinel", "--health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s  # Allow time for model download
    networks:
      - llm-sentinel-network
    # Security settings
    security_opt:
      - no-new-privileges:true
    read_only: false  # Need write access for model downloads
    tmpfs:
      - /tmp:noexec,nosuid,size=200m

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  model_cache:
    driver: local

networks:
  llm-sentinel-network:
    driver: bridge
    name: llm-sentinel-net

# Optional: Add monitoring services
# Uncomment the following to add Prometheus monitoring
#
#  prometheus:
#    image: prom/prometheus:latest
#    container_name: llm-sentinel-prometheus
#    ports:
#      - "9090:9090"
#    volumes:
#      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
#    networks:
#      - llm-sentinel-network
#    depends_on:
#      - llm-sentinel
#
#  grafana:
#    image: grafana/grafana:latest
#    container_name: llm-sentinel-grafana
#    ports:
#      - "3000:3000"
#    environment:
#      - GF_SECURITY_ADMIN_PASSWORD=admin
#    volumes:
#      - grafana-data:/var/lib/grafana
#    networks:
#      - llm-sentinel-network
#    depends_on:
#      - prometheus
#
#volumes:
#  grafana-data: